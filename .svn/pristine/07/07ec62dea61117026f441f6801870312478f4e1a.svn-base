//
//  CreateTripVC.m
//  Viking
//
//  Created by macmini08 on 27/01/15.
//  Copyright (c) 2015 Space O Technology. All rights reserved.
//

#import "CreateTripVC.h"
#import "ActivityTableCell.h"
#import "DurationTableCell.h"
#import "TempTableCell.h"
#import "ListVC.h"
#import "MainVC.h"
#import <MessageUI/MessageUI.h>
#import "AppConstant.h"
#import "MyTripVC.h"

@interface CreateTripVC () <MFMailComposeViewControllerDelegate>
{
    AppDelegate *appDel;
    NSDictionary *subActDict;
    NSArray *subActivitiesArr;
    NSArray *durationArr;
    NSArray *temperatureArr;
    NSManagedObjectContext *context;
}

@property (nonatomic, strong) NSMutableDictionary *activityDict;
@property (nonatomic, strong) NSMutableDictionary *durationDict;
@property (nonatomic, strong) NSMutableDictionary *tempDict;

@end

@implementation CreateTripVC

@synthesize subActivityArr, selectedActivity;

- (void)viewDidLoad {
    [super viewDidLoad];
    self.mainHeaderLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:18.0];
    self.activityHeaderLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:15.0];
    self.durationHeaderLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:15.0];
    self.tempHeaderLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:15.0];
    self.createHeaderLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:15.0];
    
    context = [self managedObjectContext];
    
    // Do any additional setup after loading the view.
    
    appDel = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    self.activityDict = [[NSMutableDictionary alloc] init];
    self.durationDict = [[NSMutableDictionary alloc] init];
    self.tempDict = [[NSMutableDictionary alloc] init];
    
    self.activityView.hidden = NO;
    self.durationView.hidden = YES;
    self.tempView.hidden = YES;
    self.nameView.hidden = YES;
    
    [self createSelectionView:[UIImage imageNamed:@"icon_activity_small"] durationImg:[UIImage imageNamed:@"icon_duration_small"] tempImg:[UIImage imageNamed:@"icon_temp_small"] activityName:@"ACTIVITY" durationName:@"DURATION" tempName:@"TEMP" inView:self.activityView];
    
     [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardFrameDidChange:) name:UIKeyboardWillChangeFrameNotification object:nil];
    
    NSLog(@"sub dict - %@", subActivityArr);
    
     for(NSDictionary *dict in subActivityArr)
     {
         NSLog(@"name - %@", dict[@"name"]);
         NSLog(@"selected str - %@", selectedActivity);
         if([dict[@"name"] isEqualToString:selectedActivity])
         {
             subActDict = dict;
         }
     }
    
    subActivitiesArr = subActDict[@"sub_activities"][@"name"];
    durationArr = subActDict[@"Duration"][@"name"];
    temperatureArr = subActDict[@"Temperature"][@"name"];
    
    [self setHeaderBackground];
    
}

-(void)setHeaderBackground
{
    if(!self.activityDict[@"title"])
    {
        NSLog(@"name - %@",[NSString stringWithFormat:@"BG_%@",selectedActivity]);
//        self.headerBGView.image = [UIImage imageNamed:[NSString stringWithFormat:@"Bg_%@",selectedActivity]];
        self.headerBGView.image = [UIImage imageNamed:[NSString stringWithFormat:@"BG-%@",selectedActivity]];
//        self.headerBGView.image = [UIImage imageNamed:@"Bg_Biking"];
//        [self.headerBGView setImage:[UIImage imageNamed:[NSString stringWithFormat:@"BG_%@",selectedActivity]]];
    }
    else
    {
        self.durationHeaderBGView.image = [UIImage imageNamed:[NSString stringWithFormat:@"%@_%@",selectedActivity,self.activityDict[@"title"]]];
        self.tempHeaderBGView.image = [UIImage imageNamed:[NSString stringWithFormat:@"%@_%@",selectedActivity,self.activityDict[@"title"]]];
        self.generateHeaderBGView.image = [UIImage imageNamed:[NSString stringWithFormat:@"%@_%@",selectedActivity,self.activityDict[@"title"]]];
    }
}

- (void)keyboardFrameDidChange:(NSNotification *)notification
{
    CGRect keyboardEndFrame = [[[notification userInfo] objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue];
    CGRect keyboardBeginFrame = [[[notification userInfo] objectForKey:UIKeyboardFrameBeginUserInfoKey] CGRectValue];
    UIViewAnimationCurve animationCurve = [[[notification userInfo] objectForKey:UIKeyboardAnimationCurveUserInfoKey] integerValue];
    NSTimeInterval animationDuration = [[[notification userInfo] objectForKey:UIKeyboardAnimationDurationUserInfoKey] integerValue];
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:animationDuration];
    [UIView setAnimationCurve:animationCurve];
    
    CGRect newFrame = self.view.frame;
    CGRect keyboardFrameEnd = [self.view convertRect:keyboardEndFrame toView:nil];
    CGRect keyboardFrameBegin = [self.view convertRect:keyboardBeginFrame toView:nil];
    
    newFrame.origin.y -= (keyboardFrameBegin.origin.y - keyboardFrameEnd.origin.y);
    self.view.frame = newFrame;
    
    [UIView commitAnimations];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

-(void)createSelectionView:(UIImage *)activityImage durationImg:(UIImage *)durationImage tempImg:(UIImage *)tempImage activityName:(NSString *)activityStr durationName:(NSString *)durationStr tempName:(NSString *)tempStr inView:(UIView *)view
{
    if(self.selectionView)
    {
        [self.selectionView removeFromSuperview];
    }
    
    self.selectionView = [[UIView alloc] init];
    self.selectionView.frame = CGRectMake(self.view.bounds.origin.x, 253, self.view.bounds.size.width, 39);
    self.selectionView.backgroundColor = [UIColor clearColor];
//    self.selectionView.alpha = 0.5;
    
    UIImageView *img = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, self.selectionView.frame.size.width, self.selectionView.frame.size.height)];
    NSLog(@"img frame - %@", NSStringFromCGRect(img.frame));
    
    [img setImage:[UIImage imageNamed:@"blur_strip"]];
    [self.selectionView addSubview:img];

    
    UIImageView *activityImg;
    UIImageView *durImg;
    UIImageView *tempImg;
    UILabel *activityLbl;
    UILabel *durationLbl;
    UILabel *tempLbl;
    UILabel *deviderLbl;
    UILabel *deviderLbl2;
    
    if(IS_IPHONE_5)
        activityImg = [[UIImageView alloc] initWithFrame:CGRectMake(8, 10, 20, 20)];
    else
        activityImg = [[UIImageView alloc] initWithFrame:CGRectMake(14, 10, 20, 20)];
    
    activityImg.image = activityImage;
    activityImg.contentMode = UIViewContentModeScaleAspectFill;
    [self.selectionView addSubview:activityImg];
    
    if(IS_IPHONE_5)
        durImg = [[UIImageView alloc] initWithFrame:CGRectMake(120, 10, 20, 20)];
    else
        durImg = [[UIImageView alloc] initWithFrame:CGRectMake(136, 10, 20, 20)];
    durImg.image = durationImage;
    durImg.contentMode = UIViewContentModeScaleAspectFill;
    [self.selectionView addSubview:durImg];
    
    if(IS_IPHONE_5)
        tempImg = [[UIImageView alloc] initWithFrame:CGRectMake(244, 10, 20, 20)];
    else
        tempImg = [[UIImageView alloc] initWithFrame:CGRectMake(277, 10, 20, 20)];
    tempImg.image = tempImage;
    tempImg.contentMode = UIViewContentModeScaleAspectFill;
    [self.selectionView addSubview:tempImg];
    
    if(IS_IPHONE_5)
        activityLbl = [[UILabel alloc] initWithFrame:CGRectMake(36, 9, 71, 21)];
    else
        activityLbl = [[UILabel alloc] initWithFrame:CGRectMake(42, 9, 71, 21)];
    activityLbl.backgroundColor = [UIColor clearColor];
    activityLbl.text = [activityStr uppercaseString];
    activityLbl.textColor = [UIColor whiteColor];
    activityLbl.textAlignment = NSTextAlignmentCenter;
    activityLbl.font = [UIFont fontWithName:@"ProximaNova-Regular" size:12.0];
    [self.selectionView addSubview:activityLbl];
    
    if(IS_IPHONE_5)
        durationLbl = [[UILabel alloc] initWithFrame:CGRectMake(149, 9, 73, 21)];
    else
        durationLbl = [[UILabel alloc] initWithFrame:CGRectMake(165, 9, 73, 21)];
    durationLbl.backgroundColor = [UIColor clearColor];
    durationLbl.text = [durationStr uppercaseString];
    durationLbl.textAlignment = NSTextAlignmentCenter;
    durationLbl.textColor = [UIColor whiteColor];
    durationLbl.font = [UIFont fontWithName:@"ProximaNova-Regular" size:12.0];
    [self.selectionView addSubview:durationLbl];
    
    if(IS_IPHONE_5)
        tempLbl = [[UILabel alloc] initWithFrame:CGRectMake(269, 9, 41, 21)];
    else
        tempLbl = [[UILabel alloc] initWithFrame:CGRectMake(308, 9, 41, 21)];
    tempLbl.backgroundColor = [UIColor clearColor];
    tempLbl.text = [tempStr uppercaseString];
    tempLbl.textAlignment = NSTextAlignmentCenter;
    tempLbl.textColor = [UIColor whiteColor];
    tempLbl.font = [UIFont fontWithName:@"ProximaNova-Regular" size:12.0];
    [self.selectionView addSubview:tempLbl];
    
    if(IS_IPHONE_5)
        deviderLbl = [[UILabel alloc] initWithFrame:CGRectMake(106, 4, 1, 32)];
    else
        deviderLbl = [[UILabel alloc] initWithFrame:CGRectMake(124, 4, 1, 32)];
    deviderLbl.backgroundColor = [UIColor colorWithRed:142.0/255.0 green:141.0/255.0 blue:145.0/255.0 alpha:1.0];
    [self.selectionView addSubview:deviderLbl];
    
    if(IS_IPHONE_5)
        deviderLbl2 = [[UILabel alloc] initWithFrame:CGRectMake(233, 4, 1, 32)];
    else
        deviderLbl2 = [[UILabel alloc] initWithFrame:CGRectMake(249, 4, 1, 32)];
    deviderLbl2.backgroundColor = [UIColor colorWithRed:142.0/255.0 green:141.0/255.0 blue:145.0/255.0 alpha:1.0];
    [self.selectionView addSubview:deviderLbl2];

    [view addSubview:self.selectionView];
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    // Return the number of sections.
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    // Return the number of rows in the section.
//    return 4;
    if(tableView == self.activityTable)
        return [subActivitiesArr count];
    else if (tableView == self.durationTable)
        return [durationArr count];
    else
        return [temperatureArr count];
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if(tableView == self.activityTable)
    {
        ActivityTableCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ActivityCell" forIndexPath:indexPath];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.activityLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:18.0];
        //cell.layoutMargins = UIEdgeInsetsZero;
        //cell.preservesSuperviewLayoutMargins = NO;
        
        cell.activityLbl.text = [NSString stringWithFormat:@"%@ - %@", subActDict[@"name"], subActivitiesArr[indexPath.row]];
        NSLog(@"image name - %@",[NSString stringWithFormat:@"icon-%@-%@", subActDict[@"name"], subActivitiesArr[indexPath.row]]);
        cell.activityImg.image = [UIImage imageNamed:[NSString stringWithFormat:@"icon-%@-%@", subActDict[@"name"], subActivitiesArr[indexPath.row]]];
        
        return cell;
    }
    else if(tableView == self.durationTable)
    {
        DurationTableCell *cell = [tableView dequeueReusableCellWithIdentifier:@"DurationCell" forIndexPath:indexPath];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.durationLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:18.0];
        //cell.layoutMargins = UIEdgeInsetsZero;
        //cell.preservesSuperviewLayoutMargins = NO;
        
//        cell.durationLbl.text = [NSString stringWithFormat:@"Raid - %@", durationArr[indexPath.row]];
        cell.durationLbl.text = durationArr[indexPath.row];
        NSLog(@"image name - %@",[NSString stringWithFormat:@"icon_%@", durationArr[indexPath.row]]);
        cell.durationImg.image = [UIImage imageNamed:[NSString stringWithFormat:@"icon_%@", durationArr[indexPath.row]]];
        
        return cell;
    }
    else
    {
        TempTableCell *cell = [tableView dequeueReusableCellWithIdentifier:@"TempCell" forIndexPath:indexPath];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.tempLbl.font = [UIFont fontWithName:@"ProximaNova-Light" size:18.0];
        //cell.layoutMargins = UIEdgeInsetsZero;
        //cell.preservesSuperviewLayoutMargins = NO;
        
        cell.tempLbl.text = temperatureArr[indexPath.row];
        cell.tempImg.image = [UIImage imageNamed:[NSString stringWithFormat:@"%@", temperatureArr[indexPath.row]]];
        
       /* if(indexPath.row == 0)
        {
            cell.tempImg.image = [UIImage imageNamed:@"Hot"];
            cell.tempLbl.text = @"Hot";
        }
        else if(indexPath.row == 1)
        {
            cell.tempImg.image = [UIImage imageNamed:@"Warm"];
            cell.tempLbl.text = @"Warm";
        }
        else if(indexPath.row == 2)
        {
            cell.tempImg.image = [UIImage imageNamed:@"Cool"];
            cell.tempLbl.text = @"Cool";
        }
        else
        {
            cell.tempImg.image = [UIImage imageNamed:@"Cold"];
            cell.tempLbl.text = @"Cold";
        }*/
        return cell;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if(tableView == self.activityTable)
        return 69;
    else if(tableView == self.durationTable)
        return 92;
    else
        return 69;
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if(tableView == self.activityTable)
    {
        ActivityTableCell* cell = (ActivityTableCell *) [tableView cellForRowAtIndexPath:indexPath];
        
        
        self.activityView.hidden = YES;
        self.durationView.hidden = NO;
        self.tempView.hidden = YES;
        self.nameView.hidden = YES;
        
        [self.activityDict setObject:cell.activityImg.image forKey:@"image"];
        [self.activityDict setObject:subActivitiesArr[indexPath.row] forKey:@"title"];
        
        [self createSelectionView:cell.activityImg.image durationImg:[UIImage imageNamed:@"icon_duration_small"] tempImg:[UIImage imageNamed:@"icon_temp_small"] activityName:subActivitiesArr[indexPath.row] durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
        [self.durationTable reloadData];
        
        [self SwipeRight:self.durationView];
        [self setHeaderBackground];
    }
    else if(tableView == self.durationTable)
    {
        DurationTableCell* cell = (DurationTableCell *) [tableView cellForRowAtIndexPath:indexPath];
        
        self.activityView.hidden = YES;
        self.durationView.hidden = YES;
        self.tempView.hidden = NO;
        self.nameView.hidden = YES;
        
        [self.durationDict setObject:cell.durationImg.image forKey:@"image"];
        [self.durationDict setObject:durationArr[indexPath.row] forKey:@"title"];
        
        [self createSelectionView:self.activityDict[@"image"] durationImg:cell.durationImg.image tempImg:[UIImage imageNamed:@"icon_temp_small"] activityName:self.activityDict[@"title"] durationName:durationArr[indexPath.row] tempName:@"TEMP" inView:self.tempView];
        [self.tempTable reloadData];
        
        [self SwipeRight:self.tempView];
    }
    else
    {
        TempTableCell* cell = (TempTableCell *) [tableView cellForRowAtIndexPath:indexPath];
        
        self.activityView.hidden = YES;
        self.durationView.hidden = YES;
        self.tempView.hidden = YES;
        self.nameView.hidden = NO;
        
        [self.tempDict setObject:cell.tempImg.image forKey:@"image"];
        [self.tempDict setObject:cell.tempLbl.text forKey:@"title"];
        
        [self createSelectionView:self.activityDict[@"image"] durationImg:self.durationDict[@"image"] tempImg:cell.tempImg.image activityName:self.activityDict[@"title"] durationName:self.durationDict[@"title"] tempName:cell.tempLbl.text inView:self.nameView];
        
        [self SwipeRight:self.nameView];
    }
}


/*-(IBAction)activityClicked:(id)sender
{
    self.activityView.hidden = YES;
    self.durationView.hidden = NO;
    self.tempView.hidden = YES;
    self.nameView.hidden = YES;
    
    UIButton *btn = (UIButton *)sender;
    if(btn.tag == 0)
        [self createSelectionView:@"icon_biking_road" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"Road" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    else if (btn.tag == 1)
        [self createSelectionView:@"icon_biking_mountain" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"Maountain" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    else if (btn.tag == 2)
        [self createSelectionView:@"icon_biking_casual" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"Casual" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    else
        [self createSelectionView:@"icon_biking_bmx" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"BMX" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    
    [self SwipeRight:self.durationView];
}*/


/*-(IBAction)durationClicked:(id)sender
{
    self.activityView.hidden = YES;
    self.durationView.hidden = YES;
    self.tempView.hidden = NO;
    self.nameView.hidden = YES;
    [self SwipeRight:self.tempView];
    
    UIButton *btn = (UIButton *)sender;
    if(btn.tag == 0)
        [self createSelectionView:@"icon_biking_road" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"Road" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    else if (btn.tag == 1)
        [self createSelectionView:@"icon_biking_mountain" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"Maountain" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    else if (btn.tag == 2)
        [self createSelectionView:@"icon_biking_casual" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"Casual" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    else
        [self createSelectionView:@"icon_biking_bmx" durationImg:@"icon_duration_small" tempImg:@"icon_temp_small" activityName:@"BMX" durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
}*/


/*-(IBAction)tempClicked:(id)sender
{
    self.activityView.hidden = YES;
    self.durationView.hidden = YES;
    self.tempView.hidden = YES;
    self.nameView.hidden = NO;
    [self SwipeRight:self.nameView];
}*/


-(IBAction)durationBackClicked:(id)sender
{
    self.activityView.hidden = NO;
    self.durationView.hidden = YES;
    self.tempView.hidden = YES;
    self.nameView.hidden = YES;
    
    [self createSelectionView:[UIImage imageNamed:@"icon_activity_small"] durationImg:[UIImage imageNamed:@"icon_duration_small"] tempImg:[UIImage imageNamed:@"icon_temp_small"] activityName:@"ACTIVITY" durationName:@"DURATION" tempName:@"TEMP" inView:self.activityView];
    
    [self.activityTable reloadData];
    [self SwipeLeft:self.activityView];
}


-(IBAction)tempBackClicked:(id)sender
{
    self.activityView.hidden = YES;
    self.durationView.hidden = NO;
    self.tempView.hidden = YES;
    self.nameView.hidden = YES;
    
    [self createSelectionView:self.activityDict[@"image"] durationImg:[UIImage imageNamed:@"icon_duration_small"] tempImg:[UIImage imageNamed:@"icon_temp_small"] activityName:self.activityDict[@"title"] durationName:@"DURATION" tempName:@"TEMP" inView:self.durationView];
    [self.durationTable reloadData];
    [self SwipeLeft:self.durationView];
}


-(IBAction)nameBackClicked:(id)sender
{
    self.activityView.hidden = YES;
    self.durationView.hidden = YES;
    self.tempView.hidden = NO;
    self.nameView.hidden = YES;
    
    [self createSelectionView:self.activityDict[@"image"] durationImg:self.durationDict[@"image"] tempImg:[UIImage imageNamed:@"icon_temp_small"] activityName:self.activityDict[@"title"] durationName:self.durationDict[@"title"] tempName:@"TEMP" inView:self.tempView];
    [self.tempTable reloadData];
    [self SwipeLeft:self.tempView];
}

-(void)SwipeRight:(UIView *)view{
    
    CATransition* transition = [CATransition animation];
    [transition setDuration:0.3];
    transition.type = kCATransitionReveal;
    transition.subtype = kCATransitionFromRight;
    [transition setFillMode:kCAFillModeBoth];
    [transition setTimingFunction:[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut]];
    [view.layer addAnimation:transition forKey:kCATransition];
    //    [self.tblFiles reloadData];
}

-(void)SwipeLeft:(UIView *)view{
    CATransition* transition = [CATransition animation];
    [transition setDuration:0.3];
    transition.type = kCATransitionReveal;
    transition.subtype = kCATransitionFromLeft;
    [transition setFillMode:kCAFillModeBoth];
    [transition setTimingFunction:[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut]];
    [view.layer addAnimation:transition forKey:kCATransition];
}


- (NSManagedObjectContext *)managedObjectContext {
    NSManagedObjectContext *managedcontext = nil;
    id delegate = [[UIApplication sharedApplication] delegate];
    if ([delegate performSelector:@selector(managedObjectContext)]) {
        managedcontext = [delegate managedObjectContext];
    }
    return managedcontext;
}


-(IBAction)backClick:(id)sender
{
    [self.navigationController popViewControllerAnimated:YES];
}


- (void)textFieldShouldReturn:(id)sender
{
    [sender resignFirstResponder];
}

-(IBAction)generateListClicked:(id)sender
{
    [self.activityNameTxt resignFirstResponder];
    if(![self.activityNameTxt.text length]>0)
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Hey now." message:@"Trip name can not be blank." delegate:self cancelButtonTitle:@"OK"otherButtonTitles:nil, nil];
        [alert show];
    }
    else
    {
    
        NSMutableDictionary *dict = [NSMutableDictionary new];
        
        [dict setValue:self.activityDict[@"image"] forKey:@"ActivityImage"];
        [dict setValue:self.activityDict[@"title"] forKey:@"ActivityTitle"];
        [dict setValue:self.durationDict[@"image"] forKey:@"DurationImage"];
        [dict setValue:self.durationDict[@"title"] forKey:@"DurationTitle"];
        [dict setValue:self.tempDict[@"image"] forKey:@"TempImage"];
        [dict setValue:self.tempDict[@"title"] forKey:@"TempTitle"];
        
        appDel.activityDict = dict;
        
        NSArray *subActEquipmentArr;
        
        NSArray *subActArray = subActDict[@"Equipment_List"][@"Sub_Activity"];
        for(NSDictionary *subDict in subActArray)
        {
            NSLog(@"name - %@", subDict[@"name"]);
            if([subDict[@"name"] isEqualToString:dict[@"ActivityTitle"]])
            {
                subActEquipmentArr = subDict[@"Duration"];
            }
        }
        
        NSArray *durArr;
        for(NSDictionary *durationDict in subActEquipmentArr)
        {
            if([durationDict[@"day"] isEqualToString:dict[@"DurationTitle"]])
            {
                durArr = durationDict[@"temperature"];
            }
        }
        
        NSArray *equipmentListArr;
        for(NSDictionary *tempDict in durArr)
        {
            if([tempDict[@"name"] isEqualToString:dict[@"TempTitle"]])
            {
                equipmentListArr = tempDict[@"list"][@"equipment"];
            }
            
        }
        
        [self saveMyActivity:self.activityNameTxt.text equipmentList:equipmentListArr];
    }
    
}

-(void)saveMyActivity:(NSString *)activityName equipmentList:(NSArray *)list
{
    NSManagedObject *newActivity = [NSEntityDescription insertNewObjectForEntityForName:@"MyActivityList" inManagedObjectContext:context];
    [newActivity setValue:activityName forKey:@"activityList_Name"];
    [newActivity setValue:self.durationDict[@"title"] forKey:@"duration"];
    [newActivity setValue:selectedActivity forKey:@"main_Activity"];
    [newActivity setValue:self.activityDict[@"title"] forKey:@"sub_activity"];
    [newActivity setValue:self.tempDict[@"title"] forKey:@"temperature"];
    
    NSError *error = nil;
    // Save the object to persistent store
    if (![context save:&error]) {
        NSLog(@"Can't Save! %@ %@", error, [error localizedDescription]);
    }
    

    for(NSDictionary *equipmentDict in list)
    {
         NSManagedObject *newActivityList = [NSEntityDescription insertNewObjectForEntityForName:@"MyActivityEquipmentList" inManagedObjectContext:context];
        [newActivityList setValue:activityName forKey:@"activityList_Name"];
        [newActivityList setValue:self.durationDict[@"title"] forKey:@"duration"];
        [newActivityList setValue:selectedActivity forKey:@"main_Activity"];
        [newActivityList setValue:self.activityDict[@"title"] forKey:@"sub_activity"];
        [newActivityList setValue:self.tempDict[@"title"] forKey:@"temperature"];
        [newActivityList setValue:equipmentDict[@"name"] forKey:@"equipment"];
        [newActivityList setValue:@"hexa_orange" forKey:@"image"];
        
        NSError *error1 = nil;
        // Save the object to persistent store
        if (![context save:&error1]) {
            NSLog(@"Can't Save! %@ %@", error1, [error1 localizedDescription]);
        }
    }
    
//    [self fetchdata];
    NSMutableDictionary *dict = [NSMutableDictionary new];
    
    [dict setValue:self.activityDict[@"image"] forKey:@"ActivityImage"];
    [dict setValue:self.activityDict[@"title"] forKey:@"ActivityTitle"];
    [dict setValue:self.durationDict[@"image"] forKey:@"DurationImage"];
    [dict setValue:self.durationDict[@"title"] forKey:@"DurationTitle"];
    [dict setValue:self.tempDict[@"image"] forKey:@"TempImage"];
    [dict setValue:self.tempDict[@"title"] forKey:@"TempTitle"];
    [dict setValue:self.activityNameTxt.text forKey:@"activityListname"];
    [dict setValue:selectedActivity forKey:@"main_Activity"];
    
    ListVC *vc = [self.storyboard instantiateViewControllerWithIdentifier:@"ListView"];
    vc.headerStr = self.activityNameTxt.text;
    vc.activityDict = dict;
    vc.isFromCreateTrip = YES;
    vc.myTripObj = nil;
//    vc.listArray = equipmentListArr;
    [self.navigationController pushViewController:vc animated:YES];
}

-(void)fetchdata
{
    NSManagedObjectContext *managedObjectContext = [self managedObjectContext];
    NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] initWithEntityName:@"SubActivities"];
    fetchRequest.returnsObjectsAsFaults = NO;
    NSArray *subAct = [[managedObjectContext executeFetchRequest:fetchRequest error:nil] mutableCopy];
    NSLog(@"data - %@", subAct);
    
//    NSManagedObjectContext *managedObjectContext = [self managedObjectContext];
    NSFetchRequest *fetchRequestList = [[NSFetchRequest alloc] initWithEntityName:@"MyActivityEquipmentList"];
    fetchRequestList.returnsObjectsAsFaults = NO;
    NSArray *sublist = [[managedObjectContext executeFetchRequest:fetchRequestList error:nil] mutableCopy];
    NSLog(@"data - %@", sublist);

}

#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
    
    NSMutableDictionary *dict = [NSMutableDictionary new];
    
    [dict setValue:self.activityDict[@"image"] forKey:@"ActivityImage"];
    [dict setValue:self.activityDict[@"title"] forKey:@"ActivityTitle"];
    [dict setValue:self.durationDict[@"image"] forKey:@"DurationImage"];
    [dict setValue:self.durationDict[@"title"] forKey:@"DurationTitle"];
    [dict setValue:self.tempDict[@"image"] forKey:@"TempImage"];
    [dict setValue:self.tempDict[@"title"] forKey:@"TempTitle"];
    
    appDel.activityDict = dict;
    
    ListVC *vc = [segue destinationViewController];
    vc.headerStr = self.activityNameTxt.text;
    vc.activityDict = dict;
}

-(IBAction)sendEmailClicked:(id)sender {
    // Email Subject]
    MFMailComposeViewController *mc = [[MFMailComposeViewController alloc] init];
    if([MFMailComposeViewController canSendMail])
    {
        NSString *emailTitle = @"Feedback on New Trip";
        // Email Content
        NSString *messageBody = @"";
        // To address
        NSArray *toRecipents = [NSArray arrayWithObject:@"info@thevikingapp.com"];
        
        mc.mailComposeDelegate = self;
        [mc setSubject:emailTitle];
        [mc setMessageBody:messageBody isHTML:NO];
        [mc setToRecipients:toRecipents];
        
        // Present mail view controller on screen
        [self presentViewController:mc animated:YES completion:NULL];
    }
    
}

- (void) mailComposeController:(MFMailComposeViewController *)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError *)error
{
    switch (result)
    {
        case MFMailComposeResultCancelled:
            NSLog(@"Mail cancelled");
            break;
        case MFMailComposeResultSaved:
            NSLog(@"Mail saved");
            break;
        case MFMailComposeResultSent:
            NSLog(@"Mail sent");
            break;
        case MFMailComposeResultFailed:
            NSLog(@"Mail sent failure: %@", [error localizedDescription]);
            break;
        default:
            break;
    }
    
    // Close the Mail Interface
    [self dismissViewControllerAnimated:YES completion:NULL];
}



@end
